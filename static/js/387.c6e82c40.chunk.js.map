{"version":3,"file":"static/js/387.c6e82c40.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/ErrorMessage/ErrorMessage.styled.js","components/ErrorMessage/ErrorMessage.jsx","services/api.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledCast = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  width: 1280px;\n  padding-right: 24px; \n  padding-left: 24px;\n  margin: 0 auto;\n  margin: 0 auto;\n  list-style: none;\n  padding: 0;\n\n  .actor{\n    width: calc(( 100% - 180px ) / 10);\n    border-radius: 4px;\n    box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n    transition: scale 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  img {\n    width: 100%;\n    height: auto;\n    object-fit: cover;\n    border-radius: 4px 4px 0 0;\n  }\n`","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchCast } from 'services/api';\nimport { ErrorMessage } from 'components/ErrorMessage/ErrorMessage';\nimport Loader from 'components/Loader/Loader';\nimport { StyledCast } from './Cast.styled';\n\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [movieCast, setMovieCast] = useState(null);\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchMovieCast = async () => {\n      try {\n        setIsLoading(true);\n        const { cast } = await fetchCast(movieId);\n        setMovieCast(cast);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <ErrorMessage message={error} />}\n      {movieCast && (\n    <StyledCast>\n      {movieCast.map(({ id, name, character, profile_path }) => (\n        <li className=\"actor\" key={id}>\n          <img\n            src={\n              profile_path\n                ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                : defaultImg\n            }\n            width={250}\n            alt=\"poster\"\n          />\n          <b>{name}</b>\n          <p>{character}</p>\n        </li>\n      ))}\n    </StyledCast>\n  )}\n    </>\n  );\n};\n\nexport default Cast;","import styled from \"styled-components\";\n\nexport const Error = styled.p`\n  margin-top: 100px;\n  text-align: center;\n  color: red;\n  font-size: 26px;\n  font-weight: 500;\n\n  span{\ncolor: #010101;\nfont-size: 20px;\n  }\n`","import { Error } from \"./ErrorMessage.styled\";\n\nexport const ErrorMessage = ({message}) => {\n  return <Error>Oops! Something does wrong! <br /> <span>({message})</span></Error>;\n}","import axios from 'axios';\n\naxios.defaults.params = {\n    api_key: '91faadec5932527447e5330550c607bc',\n}\n\nexport const fetchFilms = async () => {\n  const { data } = await axios.get('https://api.themoviedb.org/3/trending/movie/day');\n  return data;\n};\n\nexport const fetchMovie = async(query) => {\n  const {data} = await axios.get(`https://api.themoviedb.org/3/search/movie?query=${query}`);\n  return data;\n}\n\nexport const fetchDetails = async (movieId) => {\n  const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}`);\n  return data;\n} \n\nexport const fetchCast = async (movieId) => {\n  const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits`);\n  return data;\n} \n\nexport const fetchReviews = async (movieId) => {\n  const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews`);\n  return data;\n} "],"names":["StyledCast","styled","_templateObject","_taggedTemplateLiteral","movieId","useParams","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","error","setError","_useState5","_useState6","movieCast","setMovieCast","useEffect","fetchMovieCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$fetchCast","cast","_context","prev","next","fetchCast","sent","t0","message","finish","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","Loader","ErrorMessage","map","_ref2","id","name","character","profile_path","className","src","concat","width","alt","Error","axios","api_key","fetchFilms","_yield$axios$get","data","abrupt","fetchMovie","_callee2","query","_yield$axios$get2","_context2","_x","fetchDetails","_ref3","_callee3","_yield$axios$get3","_context3","_x2","_ref4","_callee4","_yield$axios$get4","_context4","_x3","fetchReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}