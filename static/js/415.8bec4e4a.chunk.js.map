{"version":3,"file":"static/js/415.8bec4e4a.chunk.js","mappings":"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","sources":["components/ErrorMessage/ErrorMessage.styled.js","components/ErrorMessage/ErrorMessage.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Home.jsx","services/api.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Error = styled.p`\n  margin-top: 100px;\n  text-align: center;\n  color: red;\n  font-size: 26px;\n  font-weight: 500;\n\n  span{\ncolor: #010101;\nfont-size: 20px;\n  }\n`","import { Error } from \"./ErrorMessage.styled\";\n\nexport const ErrorMessage = ({message}) => {\n  return <Error>Oops! Something does wrong! <br /> <span>({message})</span></Error>;\n}","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: 20px;\n  width: 1280px;\n  padding-right: 24px;\n  padding-left: 24px;\n  margin: 0 auto;\n  list-style: none;\n\n  .movie-item {\n    width: calc((100% - 80px) / 5);\n    border-radius: 4px;\n    box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n      0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n    transition: scale 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    > a {\n      text-decoration: none;\n    }\n  }\n  .movie-item:hover {\n    scale: 1.03;\n  }\n\n  .movie-img {\n    width: 100%;\n    height: auto;\n    object-fit: cover;\n    border-radius: 4px 4px 0 0;\n  }\n\n  .title {\n    padding: 0 5px;\n    font-weight: 500;\n    color: #010101;\n  }\n`;","import { Link, useLocation } from 'react-router-dom';\nimport { List } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const getMovies = Array.isArray(movies) && movies.length;\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n  const location = useLocation();\n  return (\n    <List>\n      {getMovies &&\n        movies.map(({ id, title, poster_path }) => (\n          <li className=\"movie-item\" key={id}>\n            <Link className=\"movie-link\" state={{ from: location }} to={`/movies/${id}`}>\n              <img className=\"movie-img\"\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                    : defaultImg\n                }\n                width={250}\n                alt=\"poster\"\n              />\n              <p className=\"title\">{title}</p>\n            </Link>\n          </li>\n        ))}\n    </List>\n  );\n};","import { useState, useEffect} from 'react';\nimport { fetchFilms } from '../services/api';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport Loader from '../components/Loader/Loader';\nimport { ErrorMessage } from '../components/ErrorMessage/ErrorMessage';\n\nconst Home = () => {\n  const [trendFilms, setTrendFilms] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n    useEffect(() => {\n    const fetchTrendFilms = async () => {\n      try {\n        setIsLoading(true);\n        const data = await fetchFilms();\n        const filmsData = data.results;\n        setTrendFilms(filmsData);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchTrendFilms();\n    }, []);\n    \n    return (\n      <div className=\"home-page\">\n        <h1 className=\"main-title\">Trending today</h1>\n        { isLoading && <Loader />}\n        {error && <ErrorMessage message={error} />}\n        {trendFilms && <MoviesList movies={trendFilms} />}\n      </div>\n    );\n};\n\nexport default Home;","import axios from 'axios';\n\naxios.defaults.params = {\n    api_key: '91faadec5932527447e5330550c607bc',\n}\n\nexport const fetchFilms = async () => {\n  const { data } = await axios.get('https://api.themoviedb.org/3/trending/movie/day');\n  return data;\n};\n\nexport const fetchMovie = async(query) => {\n  const {data} = await axios.get(`https://api.themoviedb.org/3/search/movie?query=${query}`);\n  return data;\n}\n\nexport const fetchDetails = async (movieId) => {\n  const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}`);\n  return data;\n} \n\nexport const fetchCast = async (movieId) => {\n  const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits`);\n  return data;\n} \n\nexport const fetchReviews = async (movieId) => {\n  const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews`);\n  return data;\n} "],"names":["Error","styled","_templateObject","_taggedTemplateLiteral","ErrorMessage","_ref","message","_jsxs","children","_jsx","List","MoviesList","movies","getMovies","Array","isArray","length","location","useLocation","map","_ref2","id","title","poster_path","className","Link","state","from","to","concat","src","width","alt","_useState","useState","_useState2","_slicedToArray","trendFilms","setTrendFilms","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","fetchTrendFilms","_asyncToGenerator","_regeneratorRuntime","_callee","data","filmsData","_context","prev","next","fetchFilms","sent","results","t0","finish","stop","apply","arguments","Loader","axios","api_key","_yield$axios$get","abrupt","fetchMovie","_callee2","query","_yield$axios$get2","_context2","_x","fetchDetails","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2","fetchCast","_ref4","_callee4","_yield$axios$get4","_context4","_x3","fetchReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}